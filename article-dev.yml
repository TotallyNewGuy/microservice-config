# server
server:
  port: 7000

spring:
  application:
    name: article-service

  # consul config
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        register: true
        instance-id: ${spring.application.name}:${server.port}
        service-name: ${spring.application.name}
        port: ${server.port}
        prefer-ip-address: true
        ip-address: ${spring.cloud.client.ip-address}

        # check availability
        heartbeat:
          enabled: true
        health-check-interval: 10s
        health-check-critical-timeout: 10s

    loadbalancer:
      enabled: true

  # database
  datasource:
    password: AppleMan922
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    url: jdbc:mysql://localhost:3306/myBlog?useUnicode=true&characterEncoding=UTF-8&serverTimeZone=UTC%2D8

  # Redis
  redis:
    host: localhost
    port: 6379

  servlet:
    multipart:
      # single file size
      max-file-size: 5MB
      # image size limit
      # total size
      max-request-size: 20MB

# mybatis-plus
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      table-prefix: ms_
#  mapper-locations: classpath:/com/project/myBlog/dao/mapper/*.xml
  mapper-locations: classpath:/myMapper/*.xml

resilience4j:
  circuitbreaker:
    configs:
      default:
        # if register in HealthIndicator of Actuator
        registerHealthIndicator: true
        # window size in OPEN
        slidingWindowSize: 10
        # 10 seconds instead of 10 times
        slidingWindowType: TIME_BASED
        # at least 2 request in 10s
        minimumNumberOfCalls: 2
        # window size in HALF-OPEN
        permittedNumberOfCallsInHalfOpenState: 3
        # convert OPEN to HALF-OPEN automatically
        automaticTransitionFromOpenToHalfOpenEnabled: true
        # open to half open after 2s circuit open
        waitDurationInOpenState: 2s
        # 30% fail
        failureRateThreshold: 30
        # include exception
        recordExceptions:
          - java.lang.Exception
    instances:
      backendA:
        baseConfig: default

  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 50
        coreThreadPoolSize: 10
        queueCapacity: 1

resilience4j.retry:
  instances:
    backendA:
      maxAttempts: 3
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
    backendB:
      maxAttempts: 3
      waitDuration: 10s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException